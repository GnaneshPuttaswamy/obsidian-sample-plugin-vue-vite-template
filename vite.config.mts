import { defineConfig } from "vite";
import vue from "@vitejs/plugin-vue";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY VITE
if you want to view the source, please visit the github repository of this plugin
*/
`;

// We have to use an async function to be able to use await for the dynamic import
export default defineConfig(async ({ mode }) => {
	// Dynamically import the ESM-only package
	const builtins = (await import("builtin-modules")).default;

	return {
		plugins: [vue()],
		root: "src",
		publicDir: "../public",
		build: {
			// The output directory is relative to the project root
			outDir: "../dist",
			lib: {
				entry: "main.ts",
				name: "main",
				fileName: "main",
				formats: ["cjs"],
			},
			rollupOptions: {
				external: [
					"obsidian",
					"electron",
					"@codemirror/autocomplete",
					"@codemirror/collab",
					"@codemirror/commands",
					"@codemirror/language",
					"@codemirror/lint",
					"@codemirror/search",
					"@codemirror/state",
					"@codemirror/view",
					"@lezer/common",
					"@lezer/highlight",
					"@lezer/lr",
					...builtins,
				],
				output: {
					banner: banner,
				},
			},
			// Set to 'es2018' to support older versions of Obsidian
			target: "es2018",
			// Replicate sourcemap behavior
			sourcemap: mode === "development" ? "inline" : false,
			// This is safe now because we are building to a dedicated 'dist' folder
			emptyOutDir: true,
		},
	};
});
